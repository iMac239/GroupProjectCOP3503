{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red211\green24\blue149;\red20\green160\blue255;\red35\green255\blue131;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\qc

\f0\b\fs60 \cf0 \expnd0\expndtw0\kerning0
Design\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720

\b0\fs22 \cf0 \expnd0\expndtw0\kerning0
	The project will consist of three modules. The first module is the UI module. This module consists of the main method and all the iostream methods, essentially the view the user will interact with. The second module will consist of the image class and its methods, creating a model for the image data. The third module will control the data manipulation including the algorithms for applying effects to the image.\
	The main method uses an argument for an image path to instantiate an Image object. From there, there will be a do-while loop which repeatedly asks the user for input and applies an effect to the image. When the user is done manipulating the image, they enter a command which saves the manipulated image to a path. When the user is done with the application, they enter a command which breaks the loop and terminates the program.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
Enumerations\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720

\b0\fs22 \cf2 \expnd0\expndtw0\kerning0
enum\cf0 \expnd0\expndtw0\kerning0
 Filter \{ Tint, Grayscale, Other \};\
\cf2 \expnd0\expndtw0\kerning0
enum\cf0 \expnd0\expndtw0\kerning0
 Color \{ Red, Blue, Green \};\
\pard\tx529\pardeftab720

\f1 \cf1 \expnd0\expndtw0\kerning0
\CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720

\f0\b\fs28 \cf0 \expnd0\expndtw0\kerning0
\CocoaLigature1 Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720

\b0\fs22 \cf0 \expnd0\expndtw0\kerning0
Image\
+ \cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 *data[]\
- Image(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 path)\
- Image(\cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 *data[])\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 setData(\cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 *data[])\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 createMeme(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 topText, \cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 bottomText)\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 applyFilter()\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 applyBorder(\cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 width, \cf4 \expnd0\expndtw0\kerning0
Color\cf0 \expnd0\expndtw0\kerning0
 color)- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 writeToPath(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 path, \cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 name)\
\
Gif\
+ \cf2 \expnd0\expndtw0\kerning0
Image\cf0 \expnd0\expndtw0\kerning0
 *frames[]\
- Gif(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 path)\
- Gif(\cf2 \expnd0\expndtw0\kerning0
Image\cf0 \expnd0\expndtw0\kerning0
 *frames[])\
// The following functions perform the same the function on each image frame\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 setData(\cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 *data[])\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 createMeme(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 topText, \cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 bottomText)\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 applyFilter()\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 applyBorder(\cf2 \expnd0\expndtw0\kerning0
int\cf0 \expnd0\expndtw0\kerning0
 width, \cf4 \expnd0\expndtw0\kerning0
Color\cf0 \expnd0\expndtw0\kerning0
 color)\
- \cf2 \expnd0\expndtw0\kerning0
void\cf0 \expnd0\expndtw0\kerning0
 writeToPath(\cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 path, \cf3 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
 name)\
}